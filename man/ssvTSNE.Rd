% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssvTSNE.R
\name{ssvTSNE}
\alias{ssvTSNE}
\title{ssvTSNE}
\usage{
ssvTSNE(
  features_config = NULL,
  signal_config = NULL,
  out_dir = getwd(),
  bfc = NULL,
  perplexity = 50,
  n_glyphs_x = 8,
  n_glyphs_y = n_glyphs_x,
  n_heatmap_pixels_x = 25,
  n_heatmap_pixels_y = n_heatmap_pixels_x
)
}
\arguments{
\item{features_config}{Controls features configuration.  May be a:
QcConfigFeatures object, path to a file defining configuration via
QcConfigFeatures.parse, features files to define via
QcConfigFeatures.files, or a data.frame to pass to QcConfigFeatures.}

\item{signal_config}{Controls signal configuration.  May be a: QcConfigSignal
object, path to a file defining configuration via QcConfigSignal.parse,
features files to define via QcConfigSignal.files, or a data.frame to pass
to QcConfigSignal.}

\item{out_dir}{NYI}

\item{bfc}{BiocFileCache object to use for caching. If NULL, default
new_cache() will be used.}

\item{perplexity}{passed to Rtsne::Rtsne()}

\item{n_glyphs_x}{number of glyphs across x-axis to summarize profiles in t-SNE space. Default is 8.}

\item{n_glyphs_y}{number of glyphs across y-axis. Default is the same as n_glyphs_x.}

\item{n_heatmap_pixels_x}{number of pixels to use in heatmap across x-axis in t-SNE space. Default is 25.}

\item{n_heatmap_pixels_y}{number of pixels to use in heatmap across y-axis in t-SNE space. Default is same as n_heatmap_pixels_x.}
}
\value{
a valid ssvTSNE object.
}
\description{
ssvTSNE
}
\examples{
options(mc.cores = 1)
set.seed(0)
features_config_file = system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv")
features_config = QcConfigFeatures.parse(features_config_file)

bam_config_file = system.file(package = "ssvQC", "extdata/ssvQC_bam_config.csv")
bam_config = QcConfigSignal.parse(bam_config_file)
bam_config$view_size = 600

# TSNE plot paramters can be controlled at ssvTSNE object creation or set later
# if the y settings aren't specified they are the same as x
sts = ssvTSNE(
  features_config,
  bam_config,
  n_glyphs_x = 3,
  n_heatmap_pixels_x = 5)
sts = ssvQC.plotFeatures(sts)
sts$perplexity = 10
sts = ssvQC.prepFetch(sts)
sts = ssvQC.referenceUsesSameScale(sts)
sts = ssvQC.prepSignal(sts)
sts = ssvQC.plotSignal(sts)
sts$plots$TSNE

sts$n_glyphs_x = 7
sts$n_glyphs_y = 5

sts$n_heatmap_pixels_x = 30
sts$n_heatmap_pixels_y = 60
sts.replot = ssvQC.plotSignal(sts)

}
