% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_tsne.R
\name{run_umap}
\alias{run_umap}
\title{run_umap}
\usage{
run_umap(
  profile_dt,
  config = umap::umap.defaults,
  high_topright = TRUE,
  norm1 = TRUE,
  Y_init = NULL,
  x_var = "x",
  y_var = "y",
  id_var = "id",
  wide_var = "name",
  tall_var = "tall_none",
  fun.aggregate = mean,
  ...
)
}
\arguments{
\item{profile_dt}{Tidy data.table of profile information. As returned by seqsetvis::ssvFetchBam.}

\item{config}{A umap.config object. Generate default config with umap::umap.defaults.}

\item{high_topright}{If TRUE, flip tx/ty as needed such that most points are in the top-right quadrant.}

\item{norm1}{If TRUE, rescale tx and ty to be centered at 0,0 with total size of 1.}

\item{Y_init}{Optional initial coordinates for tx and ty.}

\item{x_var}{Genomic positional variable name in profile_dt, default is "x".}

\item{y_var}{Signal strength variable name in profile_dt, default is "y".}

\item{id_var}{Region ID variable name in profile_dt, default is "id".}

\item{wide_var}{Wide variable.  Spreads matrix into columns. Each regions tSNE position will be based on one profile for every value of wide_var. Dfeault is "name".}

\item{tall_var}{Tall variable. Repeats matrix entries down rows. Each region will appear once per value of tall_var in final tSNE. Default is "tall_none", this dummies out tall varaible.}

\item{fun.aggregate}{Aggregation function to apply to y_var when combinations of id_var, x_var, wide_var, and tall_var have multiple entries.}

\item{...}{extra arguments passed to umap::umap.}
}
\value{
Return data.table mapping each id_var entry to UMAP space: defined by tx and ty
}
\description{
run_umap
}
\examples{
library(ggplot2)
data("profile_dt")
data.table::setalloccol(profile_dt)
tsne_dt = chiptsne:::run_umap(profile_dt, wide_var = "wide_var", tall_var = "tall_var")
chiptsne:::run_umap(profile_dt, wide_var = "wide_var", tall_var = "tall_none")
chiptsne:::run_umap(profile_dt, wide_var = "wide_var", tall_var = NA)
tsne_dt
ggplot(tsne_dt, aes(x = tx, y = ty, color = tall_var)) + geom_point()
}
