% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ChIPtSNE.R
\name{ConfigFeatures.parse}
\alias{ConfigFeatures.parse}
\title{QcConfigFeatures}
\usage{
ConfigFeatures.parse(
  feature_config_file,
  process_features = getOption("SQC_PROCESS_FEATURES", TRUE)
)
}
\arguments{
\item{feature_config_file}{A valid feature config file.}

\item{process_features}{if TRUE, features are loaded and overlapped to generate assement regions as part of creating QcConfigFeatures object}
}
\value{
QcConfigFeatures object

QcConfigFeatures object

a QcConfigFeatures object

A QcConfigFeatures object

Invisibly returns path to written config file.
}
\description{
See the example feature config file system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv").
}
\details{
Or create a config file using QcConfigFeatures.save_config after making one using a different method.
}
\section{Slots}{


\describe{
\item{\code{feature_load_FUN}}{function.}

\item{\code{n_peaks}}{numeric.}

\item{\code{consensus_fraction}}{numeric.}

\item{\code{consensus_n}}{numeric.}
}
}

\examples{
feature_config_file = system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv")
config_df = .parse_config_body(feature_config_file)
config_df$file = file.path(system.file(package = "ssvQC", "extdata"), config_df$file)
feature_conf = QcConfigFeatures(config_df, process_features = TRUE)
QcConfigFeatures.null()
np_files = dir(system.file(package = "ssvQC", "extdata"), pattern = "Peak$", full.names = TRUE)
object = QcConfigFeatures.files(np_files, balance_groups = TRUE)
object = ssvQC.prepFeatures(object)
plot(object)

object = QcConfigFeatures.files(np_files, 
  group_names = c("10A", "AT1", "CA1"), 
  sample_names = c("MCF10A_CTCF", "MCF10AT1_CTCF", "MCF10CA1a_CTCF"))
object = ssvQC.prepFeatures(object)
plot(object)
feature_config_file = system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv")
object = QcConfigFeatures.parse(feature_config_file)
plot(object)
feature_config_file = system.file(package = "ssvQC", "extdata/ssvQC_peak_config.csv")
feature_config = QcConfigFeatures.parse(feature_config_file)
}
