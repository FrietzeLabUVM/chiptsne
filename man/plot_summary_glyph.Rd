% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_image_plots.R,
%   R/functions_tsne_plots_glyphs.R
\name{plot_summary_glyph}
\alias{plot_summary_glyph}
\title{plot_summary_glyph}
\usage{
plot_summary_glyph(
  summary_dt,
  x_points,
  y_points = x_points,
  xrng = c(-0.5, 0.5),
  yrng = c(-0.5, 0.5),
  ylim = NULL,
  p = NULL,
  N_floor = 0,
  N_ceiling = NULL,
  min_size = 0.3,
  return_data = FALSE,
  color_mapping = NULL,
  x_var = "x",
  y_var = "y",
  wide_var = "name"
)

plot_summary_glyph(
  summary_dt,
  x_points,
  y_points = x_points,
  xrng = c(-0.5, 0.5),
  yrng = c(-0.5, 0.5),
  ylim = NULL,
  p = NULL,
  N_floor = 0,
  N_ceiling = NULL,
  min_size = 0.3,
  return_data = FALSE,
  color_mapping = NULL,
  x_var = "x",
  y_var = "y",
  wide_var = "name"
)
}
\arguments{
\item{summary_dt}{results from prep_summary()}

\item{x_points}{numeric.  number of grid points to use in x dimension.}

\item{y_points}{numeric.  number of grid points to use in y dimension.}

\item{xrng}{view domain in x dimension.}

\item{yrng}{view domain in y dimension.}

\item{ylim}{ylimits per glyph}

\item{p}{an existing ggplot to overlay images onto.  Default of NULL starts a
new plot.}

\item{N_floor}{The value of N to consider 0.  bins with N values <= N_floor
will be ignored.}

\item{N_ceiling}{The value of N to consider 1.  bins with N values >=
N_ceiling will have images drawn at full size.}

\item{min_size}{Numeric (0, 1]. The minimum size images to draw.  The default
of .3 draws images for all bins with N values >= 30% of the way from
N_floor to N_ceiling.}

\item{return_data}{if TRUE, data.table that would have been used to create
ggplot is returned instead.}

\item{color_mapping}{mapping for scale_color_manual}

\item{wide_var}{}
}
\value{
a ggplot containing glyphs of local profile summaries arranged in
  t-sne space.
}
\description{
plot_summary_glyph

Title
}
\examples{
data("profile_dt")
data("tsne_dt")
n_points = 12
summary_dt = prep_summary(profile_dt = profile_dt,
    position_dt = tsne_dt, x_points = n_points)
plot_summary_glyph(summary_dt,
    x_points = n_points)
}
